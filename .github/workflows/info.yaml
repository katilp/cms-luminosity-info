name: Build tables
on:
  workflow_dispatch
env:
  YEAR: 2015
  ERA: Run2015D   
jobs:
  Lumi:
    runs-on: ubuntu-latest
    name: create lumi tables
    steps:
    - uses: actions/checkout@v2    
    - name: Prepare
      run: |
        mkdir outputs
    # Get the parameters for lumi listings
    - name: Get parameters
      run: |
        which python
        echo "Get parameters for $YEAR"
        runmin=$(python code/read_run_values.py $ERA | cut -d , -f 1)
        runmax=$(python code/read_run_values.py $ERA | cut -d , -f 2)
        echo $runmin > runmin
        echo $runmax > runmax
    # run the container with the script in the repository
    - name: Get luminosity summary listings
      id: container
      run: |
        wget https://opendata.cern.ch/record/14210/files/Cert_13TeV_16Dec2015ReReco_Collisions15_25ns_JSON_v2.txt -O cert.txt
        # Summary txt table per year
        docker run -v $(pwd):/mnt/vol -w /home/brilws gitlab-registry.cern.ch/cms-cloud/brilws-docker /bin/bash /mnt/vol/commands.sh cert.txt tab summ > outputs/$YEAR'lumi.txt'
        ls -l
        # Summary txt table per era
        runmin=$(cat runmin)
        runmax=$(cat runmax)
        docker run -v $(pwd):/mnt/vol -w /home/brilws gitlab-registry.cern.ch/cms-cloud/brilws-docker /bin/bash /mnt/vol/commands.sh cert.txt tab summ $runmin $runmax > outputs/$ERA'lumi.txt'
        # Detaile csv per year
        docker run -v $(pwd):/mnt/vol -w /home/brilws gitlab-registry.cern.ch/cms-cloud/brilws-docker /bin/bash /mnt/vol/commands.sh cert.txt csv byls > outputs/$YEAR'lumibyls.csv'

        echo ls -l outputs `ls -l outputs`
    # upload output file
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: output
        path: outputs/
   
