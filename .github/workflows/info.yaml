name: Build listings and records
on:
  workflow_dispatch
env:
  YEAR: 2015
  ERAS: Run2015C Run2015C
jobs:
  Lumi:
    runs-on: ubuntu-latest
    name: create lumi tables
    steps:
    - uses: actions/checkout@v2    
    - name: Prepare
      run: |
        mkdir outputs
    # Get the parameters for lumi listings
    - name: Get validated runs file
      run: |
        echo "Get validated runs for $YEAR"
        url=$(grep $YEAR inputs/lumi_info.txt | awk -F "," '{print $NF}')
        wget $url -O cert.txt
    # run the container with the script in the repository
    - name: Get luminosity summary listings
      id: container
      run: | 
        # Summary txt table per year
        # docker run -v $(pwd):/mnt/vol -w /home/brilws gitlab-registry.cern.ch/cms-cloud/brilws-docker /bin/bash /mnt/vol/commands.sh cert.txt tab summ > outputs/$YEAR'lumi.txt'
        ls -l
        # Summary txt table per era, for all listed eras
        echo "Create tables for $ERAS"
        for era in ${ERAS[*]} 
        do 
          echo "doing " $era
          runmin=$(python code/read_run_values.py $era | cut -d , -f 1)
          runmax=$(python code/read_run_values.py $era | cut -d , -f 2)
          # docker run -v $(pwd):/mnt/vol -w /home/brilws gitlab-registry.cern.ch/cms-cloud/brilws-docker /bin/bash /mnt/vol/commands.sh cert.txt tab summ $runmin $runmax > outputs/$era'lumi.txt'
        done
        
        # Detailed csv per year
        # docker run -v $(pwd):/mnt/vol -w /home/brilws gitlab-registry.cern.ch/cms-cloud/brilws-docker /bin/bash /mnt/vol/commands.sh cert.txt csv byls > outputs/$YEAR'lumibyls.csv'

        echo ls -l outputs `ls -l outputs`
    # Build the luminosity record
    - name: Build the records
      id: record
      run: |
        python code/lumi_records.py > outputs/lumi_records.json
        python code/vali_records.py > outputs/vali_records.json
    # upload output file
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: output
        path: outputs/
   
